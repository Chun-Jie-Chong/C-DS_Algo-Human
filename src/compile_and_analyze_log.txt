Analyzing and compiling avl_tree.c to avl_tree.o
Compilation and analysis of avl_tree.c succeeded
Analyzing and compiling bfs.c to bfs.o
In file included from bfs.c:5:
./graph.c:29:25: warning: the computation of the size of the memory allocation may overflow [alpha.security.MallocOverflow]
    g->edges = malloc(V * sizeof(int *));
                      ~~^~~~~~~~~~~~~~~
bfs.c:121:12: warning: Potential leak of memory pointed to by 'Q' [unix.Malloc]
    return false;
           ^~~~~
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/15.0.0/include/stdbool.h:22:15: note: expanded from macro 'false'
#define false 0
              ^
2 warnings generated.
Compilation and analysis of bfs.c succeeded
Analyzing and compiling binary_search_tree.c to binary_search_tree.o
Compilation and analysis of binary_search_tree.c succeeded
Analyzing and compiling bubble_sort.c to bubble_sort.o
Compilation and analysis of bubble_sort.c succeeded
Analyzing and compiling dfs.c to dfs.o
In file included from dfs.c:4:
./graph.c:29:25: warning: the computation of the size of the memory allocation may overflow [alpha.security.MallocOverflow]
    g->edges = malloc(V * sizeof(int *));
                      ~~^~~~~~~~~~~~~~~
1 warning generated.
Compilation and analysis of dfs.c succeeded
Analyzing and compiling doubly_linkedlist.c to doubly_linkedlist.o
Compilation and analysis of doubly_linkedlist.c succeeded
Analyzing and compiling graph.c to graph.o
graph.c:29:25: warning: the computation of the size of the memory allocation may overflow [alpha.security.MallocOverflow]
    g->edges = malloc(V * sizeof(int *));
                      ~~^~~~~~~~~~~~~~~
1 warning generated.
Compilation and analysis of graph.c succeeded
Analyzing and compiling hash_map.c to hash_map.o
Compilation and analysis of hash_map.c succeeded
Analyzing and compiling hash_set.c to hash_set.o
Compilation and analysis of hash_set.c succeeded
Analyzing and compiling hash_table.c to hash_table.o
Compilation and analysis of hash_table.c succeeded
Analyzing and compiling merge_sort.c to merge_sort.o
merge_sort.c:36:30: warning: the computation of the size of the memory allocation may overflow [alpha.security.MallocOverflow]
    int *b = (int *)malloc(n * sizeof(int)); /* dynamic memory must be freed */
                           ~~^~~~~~~~~~~~~
merge_sort.c:117:16: warning: Untrusted data is used to specify the buffer size (CERT/STR31-C. Guarantee that storage for strings has sufficient space for character data and the null terminator) [alpha.security.taint.TaintPropagation]
    a = (int *)malloc(n * sizeof(int));
               ^~~~~~~~~~~~~~~~~~~~~~~
merge_sort.c:117:25: warning: the computation of the size of the memory allocation may overflow [alpha.security.MallocOverflow]
    a = (int *)malloc(n * sizeof(int));
                      ~~^~~~~~~~~~~~~
3 warnings generated.
Compilation and analysis of merge_sort.c succeeded
Analyzing and compiling queue.c to queue.o
queue.c:67:20: warning: Access to field 'next' results in a dereference of a null pointer (loaded from variable 'head') [core.NullDereference]
        head->next = NULL;
        ~~~~       ^
1 warning generated.
Compilation and analysis of queue.c succeeded
Analyzing and compiling red_black_tree.c to red_black_tree.o
red_black_tree.c:26:1: warning: Potential leak of memory pointed to by 'create' [unix.Malloc]
}
^
1 warning generated.
Compilation and analysis of red_black_tree.c succeeded
Analyzing and compiling singly_linkedlist.c to singly_linkedlist.o
Compilation and analysis of singly_linkedlist.c succeeded
Analyzing and compiling stack.c to stack.o
stack.c:37:35: warning: the computation of the size of the memory allocation may overflow [alpha.security.MallocOverflow]
    array = malloc(sizeof(void *) * max);
                   ~~~~~~~~~~~~~~~^~~~~
stack.c:55:20: warning: Assigned value is garbage or undefined [core.uninitialized.Assign]
        *(tmp + i) = *(array + i);
                   ^ ~~~~~~~~~~~~
2 warnings generated.
Compilation and analysis of stack.c succeeded
Compilation and static analysis completed.
